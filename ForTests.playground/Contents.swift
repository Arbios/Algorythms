

typealias Строка = String
typealias Символ = Character

var array = ["Яблоко", "Кувшин", "Помидор", "Хлеб", "Вода", "Морковка"]

enum Падеж {
  case Именительный
  case Родительный
  case Дательный
  case Винительный
  case Творительный
  case Предложный
}

func склонениеПоПадежу(_ падеж: Падеж, массив: [Строка]) -> [Строка] {
  switch падеж {
  case Падеж.Именительный:
    return массив
  case Падеж.Родительный:
    return добавитьОкончание(массив: массив, окончание: "а")
  case Падеж.Дательный:
    return добавитьОкончание(массив: массив, окончание: "у")
  case Падеж.Винительный:
    return добавитьОкончание(массив: массив, окончание: "а")
  case Падеж.Творительный:
    return добавитьОкончание(массив: массив, окончание: "ом")
  case Падеж.Предложный:
    return добавитьОкончание(массив: массив, окончание: "е")
  }
}

func добавитьОкончание(массив: [Строка], окончание: Character) -> [Строка] {
  return массив.map { (имя) -> Строка in
    var result = имя
    switch result.last {
    case "б", "в", "г", "д", "ж", "з", "к", "л", "м", "н", "п", "р", "с", "т", "у", "ф", "х", "ц", "ч", "ш", "щ":
      result.append(окончание)
    default:
      break
    }
    return result
  }
}

print(склонениеПоПадежу(.Дательный, массив: array))
